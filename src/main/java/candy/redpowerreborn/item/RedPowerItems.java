package candy.redpowerreborn.item;

import candy.redpowerreborn.RedPower;
import candy.redpowerreborn.block.RedPowerBlocks;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.ItemMeshDefinition;
import net.minecraft.client.renderer.RenderItem;
import net.minecraft.client.renderer.block.model.ModelResourceLocation;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Blocks;
import net.minecraft.item.EnumDyeColor;
import net.minecraft.item.Item;
import net.minecraft.item.Item.ToolMaterial;
import net.minecraft.item.ItemAxe;
import net.minecraft.item.ItemHoe;
import net.minecraft.item.ItemPickaxe;
import net.minecraft.item.ItemSeeds;
import net.minecraft.item.ItemSpade;
import net.minecraft.item.ItemStack;
import net.minecraft.item.ItemSword;
import net.minecraftforge.common.util.EnumHelper;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.relauncher.Side;

public class RedPowerItems {
	public static Item ATHAME;
	public static Item BATTERY;
	public static Item BLUE_ALLOY_INGOT;
	public static Item BLUE_DOPED_WAFER;
	public static Item BLULECTRIC_MOTOR;
	public static Item BRASS_INGOT;
	public static Item BRASS_GEAR;
	public static Item CANVAS;
	public static Item CANVAS_BAG;
	public static Item COPPER_COIL;
	public static Item COPPER_INGOT;
	public static Item COPPER_NUGGET;
	public static Item COPPER_WIRE;
	public static Item DIAMOND_DRAWPLATE;
	public static Item DIAMOND_HANDSAW;
	public static Item DIAMOND_SICKLE;
	public static Item EMERALD;
	public static Item EMERALD_AXE;
	public static Item EMERALD_HANDSAW;
	public static Item EMERALD_HOE;
	public static Item EMERALD_PICKAXE;
	public static Item EMERALD_SHOVEL;
	public static Item EMERALD_SICKLE;
	public static Item EMERALD_SWORD;
	public static Item FLAX_SEED;
	public static Item GOLD_SICKLE;
	public static Item INDIGO_DYE;
	public static Item IRON_HANDSAW;
	public static Item IRON_NUGGET;
	public static Item IRON_SICKLE;
	public static Item IRON_WIRE;
	public static Item LUMAR;
	public static Item NIKOLITE;
	public static Item PAINT_BRUSH;
	public static Item PAINT_BRUSH_WHITE;
	public static Item PAINT_BRUSH_BLACK;
	public static Item PAINT_BRUSH_ORANGE;
	public static Item PAINT_BRUSH_MAGENTA;
	public static Item PAINT_BRUSH_LIGHT_BLUE;
	public static Item PAINT_BRUSH_YELLOW;
	public static Item PAINT_BRUSH_LIME;
	public static Item PAINT_BRUSH_PINK;
	public static Item PAINT_BRUSH_GRAY;
	public static Item PAINT_BRUSH_LIGHT_GRAY;
	public static Item PAINT_BRUSH_CYAN;
	public static Item PAINT_BRUSH_PURPLE;
	public static Item PAINT_BRUSH_BLUE;
	public static Item PAINT_BRUSH_BROWN;
	public static Item PAINT_BRUSH_GREEN;
	public static Item PAINT_BRUSH_RED;
	public static Item PAINT_CAN;
	public static Item PAINT_CAN_WHITE;
	public static Item PAINT_CAN_BLACK;
	public static Item PAINT_CAN_ORANGE;
	public static Item PAINT_CAN_MAGENTA;
	public static Item PAINT_CAN_LIGHT_BLUE;
	public static Item PAINT_CAN_YELLOW;
	public static Item PAINT_CAN_LIME;
	public static Item PAINT_CAN_PINK;
	public static Item PAINT_CAN_GRAY;
	public static Item PAINT_CAN_LIGHT_GRAY;
	public static Item PAINT_CAN_CYAN;
	public static Item PAINT_CAN_PURPLE;
	public static Item PAINT_CAN_BLUE;
	public static Item PAINT_CAN_BROWN;
	public static Item PAINT_CAN_GREEN;
	public static Item PAINT_CAN_RED;
	public static Item PLAN;
	public static Item RED_ALLOY_INGOT;
	public static Item RED_DOPED_WAFER;
	public static Item RUBY;
	public static Item RUBY_AXE;
	public static Item RUBY_HANDSAW;
	public static Item RUBY_HOE;
	public static Item RUBY_PICKAXE;
	public static Item RUBY_SHOVEL;
	public static Item RUBY_SICKLE;
	public static Item RUBY_SWORD;
	public static Item SAPPHIRE;
	public static Item SAPPHIRE_AXE;
	public static Item SAPPHIRE_HANDSAW;
	public static Item SAPPHIRE_HOE;
	public static Item SAPPHIRE_PICKAXE;
	public static Item SAPPHIRE_SHOVEL;
	public static Item SAPPHIRE_SICKLE;
	public static Item SAPPHIRE_SWORD;
	public static Item SCREWDRIVER;
	public static Item SEED_BAG;
	public static Item SILICON_BOULE;
	public static Item SILICON_CHIP;
	public static Item SILICON_WAFER;
	public static Item SILVER_INGOT;
	public static Item SILVER_NUGGET;
	public static Item SONIC_SCREWDRIVER;
	public static Item STONE_ANODE;
	public static Item STONE_ASSEMBLY;
	public static Item STONE_BUNDLE;
	public static Item STONE_CATHODE;
	public static Item STONE_POINTER;
	public static Item STONE_REDWIRE;
	public static Item STONE_SICKLE;
	public static Item STONE_WAFER;
	public static Item STONE_WIRE;
	public static Item TAINTED_SILICON_CHIP;
	public static Item TIN_INGOT;
	public static Item TIN_NUGGET;
	public static Item TIN_PLATE;
	public static Item VOLTMETER;
	public static Item WOODEN_SICKLE;
	public static Item WOODEN_SAIL;
	public static Item WOODEN_WIND_TURBINE;
	public static Item WOODEN_WINDMILL;
	public static Item WOOL_CARD;
	
	public static ToolMaterial EMERALD_TOOL_MATERIAL;
	public static ToolMaterial RUBY_TOOL_MATERIAL;
	public static ToolMaterial SAPPHIRE_TOOL_MATERIAL;

	public static void preInit(FMLPreInitializationEvent event) {
		
		//might have to register these after the emeralds but still before the tools
		EMERALD_TOOL_MATERIAL = EnumHelper.addToolMaterial("EMERALD", 2, 500, 8.0F, 3.0F, 8).setRepairItem(new ItemStack(EMERALD));//TODO check values later maybe
		RUBY_TOOL_MATERIAL = EnumHelper.addToolMaterial("RUBY", 2, 500, 8.0F, 3.0F, 8).setRepairItem(new ItemStack(RUBY));
		SAPPHIRE_TOOL_MATERIAL = EnumHelper.addToolMaterial("SAPPHIRE", 2, 500, 8.0F, 3.0F, 8).setRepairItem(new ItemStack(SAPPHIRE));
		
		ATHAME = new ItemAthame().setUnlocalizedName(RedPower.MODID + "_athame").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(ATHAME, "athame");
		BATTERY = new ItemBattery().setUnlocalizedName(RedPower.MODID + "_battery").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(BATTERY, "battery");
		BLUE_ALLOY_INGOT = new Item().setUnlocalizedName(RedPower.MODID + "_ingotBlueAlloy").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(BLUE_ALLOY_INGOT, "blue_alloy_ingot");
		BLUE_DOPED_WAFER = new Item().setUnlocalizedName(RedPower.MODID + "_blueDopedWafer").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(BLUE_DOPED_WAFER, "blue_doped_wafer");
		BLULECTRIC_MOTOR = new Item().setUnlocalizedName(RedPower.MODID + "_blulectricMotor").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(BLULECTRIC_MOTOR, "blulectric_motor");
		BRASS_INGOT = new Item().setUnlocalizedName(RedPower.MODID + "_ingotBrass").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(BRASS_INGOT, "brass_ingot");
		BRASS_GEAR = new Item().setUnlocalizedName(RedPower.MODID + "_gearBrass").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(BRASS_GEAR, "brass_gear");
		CANVAS = new Item().setUnlocalizedName(RedPower.MODID + "_canvas").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(CANVAS, "canvas");
		CANVAS_BAG = new ItemCanvasBag().setUnlocalizedName(RedPower.MODID + "_canvasBag").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(CANVAS_BAG, "canvas_bag");
		COPPER_COIL = new Item().setUnlocalizedName(RedPower.MODID + "_coilCopper").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(COPPER_COIL, "copper_coil");
		COPPER_INGOT = new Item().setUnlocalizedName(RedPower.MODID + "_ingotCopper").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(COPPER_INGOT, "copper_ingot");
		COPPER_NUGGET = new Item().setUnlocalizedName(RedPower.MODID + "_nuggetCopper").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(COPPER_NUGGET, "copper_nugget");
		COPPER_WIRE = new Item().setUnlocalizedName(RedPower.MODID + "_wireCopper").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(COPPER_WIRE, "copper_wire");
		DIAMOND_DRAWPLATE = new ItemDrawplate(ToolMaterial.DIAMOND).setUnlocalizedName(RedPower.MODID + "_drawplateDiamond").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(DIAMOND_DRAWPLATE, "diamond_drawplate");
		DIAMOND_HANDSAW = new ItemHandsaw(ToolMaterial.DIAMOND).setUnlocalizedName(RedPower.MODID + "_handsawDiamond").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(DIAMOND_HANDSAW, "diamond_handsaw");
		DIAMOND_SICKLE = new ItemSickle(ToolMaterial.DIAMOND).setUnlocalizedName(RedPower.MODID + "_sickleDiamond").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(DIAMOND_SICKLE, "diamond_sickle");
		EMERALD = new Item().setUnlocalizedName(RedPower.MODID + "_emerald").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(EMERALD, "emerald");
		EMERALD_AXE = new ItemRedPowerAxe(EMERALD_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_axeEmerald").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(EMERALD_AXE, "emerald_axe");
		EMERALD_HANDSAW = new ItemHandsaw(EMERALD_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_handsawEmerald").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(EMERALD_HANDSAW, "emerald_handsaw");
		EMERALD_HOE = new ItemHoe(EMERALD_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_hoeEmerald").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(EMERALD_HOE, "emerald_hoe");
		EMERALD_PICKAXE = new ItemRedPowerPickaxe(EMERALD_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_pickaxeEmerald").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(EMERALD_PICKAXE, "emerald_pickaxe");
		EMERALD_SHOVEL = new ItemSpade(EMERALD_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_shovelEmerald").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(EMERALD_SHOVEL, "emerald_shovel");
		EMERALD_SICKLE = new ItemSickle(EMERALD_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_sickleEmerald").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(EMERALD_SICKLE, "emerald_sickle");
		EMERALD_SWORD = new ItemSword(EMERALD_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_swordEmerald").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(EMERALD_SWORD, "emerald_sword");
		FLAX_SEED = new ItemSeeds(RedPowerBlocks.FLAX, Blocks.FARMLAND).setUnlocalizedName(RedPower.MODID + "_seedFlax").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(FLAX_SEED, "flax_seed");
		GOLD_SICKLE = new ItemSickle(ToolMaterial.GOLD).setUnlocalizedName(RedPower.MODID + "_sickleGold").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(GOLD_SICKLE, "gold_sickle");
		INDIGO_DYE = new Item().setUnlocalizedName(RedPower.MODID + "_dye.indigo").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(INDIGO_DYE, "indigo_dye");
		IRON_HANDSAW = new ItemHandsaw(ToolMaterial.IRON).setUnlocalizedName(RedPower.MODID + "_handsawIron").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(IRON_HANDSAW, "iron_handsaw");
		IRON_NUGGET = new Item().setUnlocalizedName(RedPower.MODID + "_nuggetIron").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(IRON_NUGGET, "iron_nugget");
		IRON_SICKLE = new ItemSickle(ToolMaterial.IRON).setUnlocalizedName(RedPower.MODID + "_sickleIron").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(IRON_SICKLE, "iron_sickle");
		IRON_WIRE = new Item().setUnlocalizedName(RedPower.MODID + "_wireIron").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(IRON_WIRE, "iron_wire");
		LUMAR = new ItemLumar().setUnlocalizedName(RedPower.MODID + "_lumar").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(LUMAR, "lumar");
		NIKOLITE = new Item().setUnlocalizedName(RedPower.MODID + "_nikolite").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(NIKOLITE, "nikolite");
		PAINT_BRUSH = new Item().setUnlocalizedName(RedPower.MODID + "_paintBrush").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_BRUSH, "paint_brush");
		PAINT_BRUSH_WHITE = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.white").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_WHITE, "paint_brush_white");
		PAINT_BRUSH_BLACK = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.black").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_BLACK, "paint_brush_black");
		PAINT_BRUSH_ORANGE = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.orange").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_ORANGE, "paint_brush_orange");
		PAINT_BRUSH_MAGENTA = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.magenta").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_MAGENTA, "paint_brush_magenta");
		PAINT_BRUSH_LIGHT_BLUE = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.lightBlue").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_LIGHT_BLUE, "paint_brush_light_blue");
		PAINT_BRUSH_YELLOW = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.yellow").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_YELLOW, "paint_brush_yellow");
		PAINT_BRUSH_LIME = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.lime").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_LIME, "paint_brush_lime");
		PAINT_BRUSH_PINK = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.pink").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_PINK, "paint_brush_pink");
		PAINT_BRUSH_GRAY = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.gray").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_GRAY, "paint_brush_gray");
		PAINT_BRUSH_LIGHT_GRAY = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.lightGray").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_LIGHT_GRAY, "paint_brush_light_gray");
		PAINT_BRUSH_CYAN = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.cyan").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_CYAN, "paint_brush_cyan");
		PAINT_BRUSH_PURPLE = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.purple").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_PURPLE, "paint_brush_purple");
		PAINT_BRUSH_BLUE = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.blue").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_BLUE, "paint_brush_blue");
		PAINT_BRUSH_BROWN = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.brown").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_BROWN, "paint_brush_brown");
		PAINT_BRUSH_GREEN = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.green").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_GREEN, "paint_brush_green");
		PAINT_BRUSH_RED = new ItemPaintBrush(EnumDyeColor.BLACK).setUnlocalizedName(RedPower.MODID + "_paintBrush.red").setCreativeTab(RedPower.tabRedPower);//maybe return an unlocalized name the way ItemDye does.
		GameRegistry.registerItem(PAINT_BRUSH_RED, "paint_brush_red");
		PAINT_CAN = new Item().setUnlocalizedName(RedPower.MODID + "_paintCan").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN, "paint_can");
		PAINT_CAN_WHITE = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.white").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_WHITE, "paint_can_white");
		PAINT_CAN_BLACK = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.black").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_BLACK, "paint_can_black");
		PAINT_CAN_ORANGE = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.orange").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_ORANGE, "paint_can_orange");
		PAINT_CAN_MAGENTA = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.magenta").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_MAGENTA, "paint_can_magenta");
		PAINT_CAN_LIGHT_BLUE = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.lightBlue").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_LIGHT_BLUE, "paint_can_light_blue");
		PAINT_CAN_YELLOW = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.yellow").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_YELLOW, "paint_can_yellow");
		PAINT_CAN_LIME = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.lime").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_LIME, "paint_can_lime");
		PAINT_CAN_PINK = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.pink").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_PINK, "paint_can_pink");
		PAINT_CAN_GRAY = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.gray").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_GRAY, "paint_can_gray");
		PAINT_CAN_LIGHT_GRAY = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.lightGray").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_LIGHT_GRAY, "paint_can_light_gray");
		PAINT_CAN_CYAN = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.cyan").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_CYAN, "paint_can_cyan");
		PAINT_CAN_PURPLE = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.purple").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_PURPLE, "paint_can_purple");
		PAINT_CAN_BLUE = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.blue").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_BLUE, "paint_can_blue");
		PAINT_CAN_BROWN = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.brown").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_BROWN, "paint_can_brown");
		PAINT_CAN_GREEN = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.green").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_GREEN, "paint_can_green");
		PAINT_CAN_RED = new ItemPaintCan().setUnlocalizedName(RedPower.MODID + "_paintCan.red").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PAINT_CAN_RED, "paint_can_red");
		PLAN = new ItemPlan().setUnlocalizedName(RedPower.MODID + "_plan").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(PLAN, "plan");
		RED_ALLOY_INGOT = new Item().setUnlocalizedName(RedPower.MODID + "_ingotRedAlloy").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RED_ALLOY_INGOT, "red_alloy_ingot");
		RED_DOPED_WAFER = new Item().setUnlocalizedName(RedPower.MODID + "_redDopedWafer").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RED_DOPED_WAFER, "red_doped_wafer");
		RUBY = new Item().setUnlocalizedName(RedPower.MODID + "_ruby").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RUBY, "ruby");
		RUBY_AXE = new ItemRedPowerAxe(RUBY_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_axeRuby").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RUBY_AXE, "ruby_axe");
		RUBY_HANDSAW = new ItemHandsaw(RUBY_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_handsawRuby").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RUBY_HANDSAW, "ruby_handsaw");
		RUBY_HOE = new ItemHoe(RUBY_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_hoeRuby").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RUBY_HOE, "ruby_hoe");
		RUBY_PICKAXE = new ItemRedPowerPickaxe(RUBY_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_pickaxeRuby").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RUBY_PICKAXE, "ruby_pickaxe");
		RUBY_SHOVEL = new ItemSpade(RUBY_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_shovelRuby").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RUBY_SHOVEL, "ruby_shovel");
		RUBY_SICKLE = new ItemSickle(RUBY_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_sickleRuby").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RUBY_SICKLE, "ruby_sickle");
		RUBY_SWORD = new ItemSword(RUBY_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_swordRuby").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(RUBY_SWORD, "ruby_sword");
		SAPPHIRE = new Item().setUnlocalizedName(RedPower.MODID + "_sapphire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SAPPHIRE, "sapphire");
		SAPPHIRE_AXE = new ItemRedPowerAxe(SAPPHIRE_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_axeSapphire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SAPPHIRE_AXE, "sapphire_axe");
		SAPPHIRE_HANDSAW = new ItemHandsaw(SAPPHIRE_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_handsawSapphire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SAPPHIRE_HANDSAW, "sapphire_handsaw");
		SAPPHIRE_HOE = new ItemHoe(SAPPHIRE_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_hoeSapphire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SAPPHIRE_HOE, "sapphire_hoe");
		SAPPHIRE_PICKAXE = new ItemRedPowerPickaxe(SAPPHIRE_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_pickaxeSapphire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SAPPHIRE_PICKAXE, "sapphire_pickaxe");
		SAPPHIRE_SHOVEL = new ItemSpade(SAPPHIRE_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_shovelSapphire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SAPPHIRE_SHOVEL, "sapphire_shovel");
		SAPPHIRE_SICKLE = new ItemSickle(SAPPHIRE_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_sickleSapphire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SAPPHIRE_SICKLE, "sapphire_sickle");
		SAPPHIRE_SWORD = new ItemSword(RUBY_TOOL_MATERIAL).setUnlocalizedName(RedPower.MODID + "_swordSapphire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SAPPHIRE_SWORD, "sapphire_sword");
		SCREWDRIVER = new Item/*Screwdriver*/().setUnlocalizedName(RedPower.MODID + "_screwdriver").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SCREWDRIVER, "screwdriver");
		SEED_BAG = new Item/*SeedBag*/().setUnlocalizedName(RedPower.MODID + "_seedBag").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SEED_BAG, "seed_bag");
		SILICON_BOULE = new Item().setUnlocalizedName(RedPower.MODID + "_siliconBoule").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SILICON_BOULE, "silicon_boule");
		SILICON_CHIP = new Item().setUnlocalizedName(RedPower.MODID + "_siliconChip").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SILICON_CHIP, "silicon_chip");
		SILICON_WAFER = new Item().setUnlocalizedName(RedPower.MODID + "_siliconWafer").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SILICON_WAFER, "silicon_wafer");
		SILVER_INGOT = new Item().setUnlocalizedName(RedPower.MODID + "_ingotSilver").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SILVER_INGOT, "silver_ingot");
		SILVER_NUGGET = new Item().setUnlocalizedName(RedPower.MODID + "_nuggetSilver").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SILVER_NUGGET, "silver_nugget");
		SONIC_SCREWDRIVER = new Item/*SonicScrewdriver*/().setUnlocalizedName(RedPower.MODID + "_sonicScrewdriver").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(SONIC_SCREWDRIVER, "sonic_screwdriver");
		STONE_ANODE = new Item().setUnlocalizedName(RedPower.MODID + "_stoneAnode").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_ANODE, "stone_anode");
		STONE_ASSEMBLY = new Item().setUnlocalizedName(RedPower.MODID + "_stoneAssembly").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_ASSEMBLY, "stone_assembly");
		STONE_BUNDLE = new Item().setUnlocalizedName(RedPower.MODID + "_stoneBundle").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_BUNDLE, "stone_bundle");
		STONE_CATHODE = new Item().setUnlocalizedName(RedPower.MODID + "_stoneCathode").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_CATHODE, "stone_cathode");
		STONE_POINTER = new Item().setUnlocalizedName(RedPower.MODID + "_stonePointer").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_POINTER, "stone_pointer");
		STONE_REDWIRE = new Item().setUnlocalizedName(RedPower.MODID + "_stoneRedwire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_REDWIRE, "stone_redwire");
		STONE_SICKLE = new ItemSickle(ToolMaterial.STONE).setUnlocalizedName(RedPower.MODID + "_sickleStone").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_SICKLE, "stone_sickle");
		STONE_WAFER = new Item().setUnlocalizedName(RedPower.MODID + "_stoneWafer").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_WAFER, "stone_wafer");
		STONE_WIRE = new Item().setUnlocalizedName(RedPower.MODID + "_stoneWire").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(STONE_WIRE, "stone_wire");
		TAINTED_SILICON_CHIP = new Item().setUnlocalizedName(RedPower.MODID + "_taintedSiliconChip").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(TAINTED_SILICON_CHIP, "tainted_silicon_chip");
		TIN_INGOT = new Item().setUnlocalizedName(RedPower.MODID + "_ingotTin").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(TIN_INGOT, "tin_ingot");
		TIN_NUGGET = new Item().setUnlocalizedName(RedPower.MODID + "_nuggetTin").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(TIN_NUGGET, "tin_nugget");
		TIN_PLATE = new Item().setUnlocalizedName(RedPower.MODID + "_tinPlate").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(TIN_PLATE, "tin_plate");
		VOLTMETER = new ItemVoltmeter().setUnlocalizedName(RedPower.MODID + "_voltmeter").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(VOLTMETER, "voltmeter");
		WOODEN_SICKLE = new ItemSickle(ToolMaterial.WOOD).setUnlocalizedName(RedPower.MODID + "_sickleWooden").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(WOODEN_SICKLE, "wood_sickle");
		WOODEN_SAIL = new Item().setUnlocalizedName(RedPower.MODID + "_sail").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(WOODEN_SAIL, "wooden_sail");
		WOODEN_WIND_TURBINE = new Item().setUnlocalizedName(RedPower.MODID + "_woodenWindTurbine").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(WOODEN_WIND_TURBINE, "wooden_wind_turbine");
		WOODEN_WINDMILL = new Item().setUnlocalizedName(RedPower.MODID + "_woodenWindmill").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(WOODEN_WINDMILL, "wooden_windmill");
		WOOL_CARD = new ItemWoolCard().setUnlocalizedName(RedPower.MODID + "_woolCard").setCreativeTab(RedPower.tabRedPower);
		GameRegistry.registerItem(WOOL_CARD, "wool_card");
	}
	
	public static void init(FMLInitializationEvent event) {
		if (event.getSide() == Side.CLIENT) {
			RenderItem renderItem = Minecraft.getMinecraft().getRenderItem();
			
			renderItem.getItemModelMesher().register(ATHAME, 0, new ModelResourceLocation(RedPower.MODID + ":athame", "inventory"));
			renderItem.getItemModelMesher().register(BATTERY, 0, new ModelResourceLocation(RedPower.MODID + ":battery", "inventory"));
			renderItem.getItemModelMesher().register(BLUE_ALLOY_INGOT, 0, new ModelResourceLocation(RedPower.MODID + ":blue_alloy_ingot", "inventory"));
			renderItem.getItemModelMesher().register(BLUE_DOPED_WAFER, 0, new ModelResourceLocation(RedPower.MODID + ":blue_doped_wafer", "inventory"));
			renderItem.getItemModelMesher().register(BLULECTRIC_MOTOR, 0, new ModelResourceLocation(RedPower.MODID + ":blulectric_motor", "inventory"));
			renderItem.getItemModelMesher().register(BRASS_INGOT, 0, new ModelResourceLocation(RedPower.MODID + ":brass_ingot", "inventory"));
			renderItem.getItemModelMesher().register(BRASS_GEAR, 0, new ModelResourceLocation(RedPower.MODID + ":brass_gear", "inventory"));
			renderItem.getItemModelMesher().register(CANVAS, 0, new ModelResourceLocation(RedPower.MODID + ":canvas", "inventory"));
			Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(CANVAS_BAG, new ItemMeshDefinition() {
				public ModelResourceLocation getModelLocation(ItemStack stack) {
					return new ModelResourceLocation(RedPower.MODID + ":canvas_bag", "inventory");
				}
			});
			renderItem.getItemModelMesher().register(COPPER_COIL, 0, new ModelResourceLocation(RedPower.MODID + ":copper_coil", "inventory"));
			renderItem.getItemModelMesher().register(COPPER_INGOT, 0, new ModelResourceLocation(RedPower.MODID + ":copper_ingot", "inventory"));
			renderItem.getItemModelMesher().register(COPPER_NUGGET, 0, new ModelResourceLocation(RedPower.MODID + ":copper_nugget", "inventory"));
			renderItem.getItemModelMesher().register(COPPER_WIRE, 0, new ModelResourceLocation(RedPower.MODID + ":copper_wire", "inventory"));
			renderItem.getItemModelMesher().register(DIAMOND_DRAWPLATE, 0, new ModelResourceLocation(RedPower.MODID + ":diamond_drawplate", "inventory"));
			renderItem.getItemModelMesher().register(DIAMOND_HANDSAW, 0, new ModelResourceLocation(RedPower.MODID + ":diamond_handsaw", "inventory"));
			renderItem.getItemModelMesher().register(DIAMOND_SICKLE, 0, new ModelResourceLocation(RedPower.MODID + ":diamond_sickle", "inventory"));
			renderItem.getItemModelMesher().register(EMERALD, 0, new ModelResourceLocation(RedPower.MODID + ":emerald", "inventory"));
			renderItem.getItemModelMesher().register(EMERALD_AXE, 0, new ModelResourceLocation(RedPower.MODID + ":emerald_axe", "inventory"));
			renderItem.getItemModelMesher().register(EMERALD_HANDSAW, 0, new ModelResourceLocation(RedPower.MODID + ":emerald_handsaw", "inventory"));
			renderItem.getItemModelMesher().register(EMERALD_HOE, 0, new ModelResourceLocation(RedPower.MODID + ":emerald_hoe", "inventory"));
			renderItem.getItemModelMesher().register(EMERALD_PICKAXE, 0, new ModelResourceLocation(RedPower.MODID + ":emerald_pickaxe", "inventory"));
			renderItem.getItemModelMesher().register(EMERALD_SHOVEL, 0, new ModelResourceLocation(RedPower.MODID + ":emerald_shovel", "inventory"));
			renderItem.getItemModelMesher().register(EMERALD_SICKLE, 0, new ModelResourceLocation(RedPower.MODID + ":emerald_sickle", "inventory"));
			renderItem.getItemModelMesher().register(EMERALD_SWORD, 0, new ModelResourceLocation(RedPower.MODID + ":emerald_sword", "inventory"));
			renderItem.getItemModelMesher().register(FLAX_SEED, 0, new ModelResourceLocation(RedPower.MODID + ":flax_seed", "inventory"));
			renderItem.getItemModelMesher().register(GOLD_SICKLE, 0, new ModelResourceLocation(RedPower.MODID + ":gold_sickle", "inventory"));
			renderItem.getItemModelMesher().register(INDIGO_DYE, 0, new ModelResourceLocation(RedPower.MODID + ":indigo_dye", "inventory"));
			renderItem.getItemModelMesher().register(IRON_HANDSAW, 0, new ModelResourceLocation(RedPower.MODID + ":iron_handsaw", "inventory"));
			renderItem.getItemModelMesher().register(IRON_NUGGET, 0, new ModelResourceLocation(RedPower.MODID + ":iron_nugget", "inventory"));
			renderItem.getItemModelMesher().register(IRON_SICKLE, 0, new ModelResourceLocation(RedPower.MODID + ":iron_sickle", "inventory"));
			renderItem.getItemModelMesher().register(IRON_WIRE, 0, new ModelResourceLocation(RedPower.MODID + ":iron_wire", "inventory"));
			renderItem.getItemModelMesher().register(LUMAR, 0, new ModelResourceLocation(RedPower.MODID + ":lumar", "inventory"));//TODO  find out how to register the subitems of lumar
			renderItem.getItemModelMesher().register(NIKOLITE, 0, new ModelResourceLocation(RedPower.MODID + ":nikolite", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_WHITE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_white", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_BLACK, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_black", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_ORANGE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_orange", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_MAGENTA, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_magenta", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_LIGHT_BLUE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_light_blue", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_YELLOW, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_yellow", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_LIME, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_lime", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_PINK, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_pink", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_GRAY, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_gray", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_LIGHT_GRAY, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_light_gray", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_CYAN, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_cyan", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_PURPLE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_purple", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_BLUE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_blue", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_BROWN, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_brown", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_GREEN, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_green", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_BRUSH_RED, 0, new ModelResourceLocation(RedPower.MODID + ":paint_brush_red", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_WHITE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_white", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_BLACK, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_black", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_ORANGE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_orange", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_MAGENTA, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_magenta", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_LIGHT_BLUE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_light_blue", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_YELLOW, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_yellow", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_LIME, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_lime", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_PINK, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_pink", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_GRAY, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_gray", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_LIGHT_GRAY, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_light_gray", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_CYAN, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_cyan", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_PURPLE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_purple", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_BLUE, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_blue", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_BROWN, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_brown", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_GREEN, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_green", "inventory"));
			renderItem.getItemModelMesher().register(PAINT_CAN_RED, 0, new ModelResourceLocation(RedPower.MODID + ":paint_can_red", "inventory"));
			renderItem.getItemModelMesher().register(PLAN, 0, new ModelResourceLocation(RedPower.MODID + ":plan", "inventory"));
			renderItem.getItemModelMesher().register(RED_ALLOY_INGOT, 0, new ModelResourceLocation(RedPower.MODID + ":red_alloy_ingot", "inventory"));
			renderItem.getItemModelMesher().register(RED_DOPED_WAFER, 0, new ModelResourceLocation(RedPower.MODID + ":red_doped_wafer", "inventory"));
			renderItem.getItemModelMesher().register(RUBY, 0, new ModelResourceLocation(RedPower.MODID + ":ruby", "inventory"));
			renderItem.getItemModelMesher().register(RUBY_AXE, 0, new ModelResourceLocation(RedPower.MODID + ":ruby_axe", "inventory"));
			renderItem.getItemModelMesher().register(RUBY_HANDSAW, 0, new ModelResourceLocation(RedPower.MODID + ":ruby_handsaw", "inventory"));
			renderItem.getItemModelMesher().register(RUBY_HOE, 0, new ModelResourceLocation(RedPower.MODID + ":ruby_hoe", "inventory"));
			renderItem.getItemModelMesher().register(RUBY_PICKAXE, 0, new ModelResourceLocation(RedPower.MODID + ":ruby_pickaxe", "inventory"));
			renderItem.getItemModelMesher().register(RUBY_SHOVEL, 0, new ModelResourceLocation(RedPower.MODID + ":ruby_shovel", "inventory"));
			renderItem.getItemModelMesher().register(RUBY_SICKLE, 0, new ModelResourceLocation(RedPower.MODID + ":ruby_sickle", "inventory"));
			renderItem.getItemModelMesher().register(RUBY_SWORD, 0, new ModelResourceLocation(RedPower.MODID + ":ruby_sword", "inventory"));
			renderItem.getItemModelMesher().register(SAPPHIRE, 0, new ModelResourceLocation(RedPower.MODID + ":sapphire", "inventory"));
			renderItem.getItemModelMesher().register(SAPPHIRE_AXE, 0, new ModelResourceLocation(RedPower.MODID + ":sapphire_axe", "inventory"));
			renderItem.getItemModelMesher().register(SAPPHIRE_HANDSAW, 0, new ModelResourceLocation(RedPower.MODID + ":sapphire_handsaw", "inventory"));
			renderItem.getItemModelMesher().register(SAPPHIRE_HOE, 0, new ModelResourceLocation(RedPower.MODID + ":sapphire_hoe", "inventory"));
			renderItem.getItemModelMesher().register(SAPPHIRE_PICKAXE, 0, new ModelResourceLocation(RedPower.MODID + ":sapphire_pickaxe", "inventory"));
			renderItem.getItemModelMesher().register(SAPPHIRE_SHOVEL, 0, new ModelResourceLocation(RedPower.MODID + ":sapphire_shovel", "inventory"));
			renderItem.getItemModelMesher().register(SAPPHIRE_SICKLE, 0, new ModelResourceLocation(RedPower.MODID + ":sapphire_sickle", "inventory"));
			renderItem.getItemModelMesher().register(SAPPHIRE_SWORD, 0, new ModelResourceLocation(RedPower.MODID + ":sapphire_sword", "inventory"));
			renderItem.getItemModelMesher().register(SCREWDRIVER, 0, new ModelResourceLocation(RedPower.MODID + ":screwdriver", "inventory"));
			renderItem.getItemModelMesher().register(SEED_BAG, 0, new ModelResourceLocation(RedPower.MODID + ":seed_bag", "inventory"));
			renderItem.getItemModelMesher().register(SILICON_BOULE, 0, new ModelResourceLocation(RedPower.MODID + ":silicon_boule", "inventory"));
			renderItem.getItemModelMesher().register(SILICON_CHIP, 0, new ModelResourceLocation(RedPower.MODID + ":silicon_chip", "inventory"));
			renderItem.getItemModelMesher().register(SILICON_WAFER, 0, new ModelResourceLocation(RedPower.MODID + ":silicon_wafer", "inventory"));
			renderItem.getItemModelMesher().register(SILVER_INGOT, 0, new ModelResourceLocation(RedPower.MODID + ":silver_ingot", "inventory"));
			renderItem.getItemModelMesher().register(SILVER_NUGGET, 0, new ModelResourceLocation(RedPower.MODID + ":silver_nugget", "inventory"));
			renderItem.getItemModelMesher().register(SONIC_SCREWDRIVER, 0, new ModelResourceLocation(RedPower.MODID + ":sonic_screwdriver", "inventory"));
			renderItem.getItemModelMesher().register(STONE_ANODE, 0, new ModelResourceLocation(RedPower.MODID + ":stone_anode", "inventory"));
			renderItem.getItemModelMesher().register(STONE_ASSEMBLY, 0, new ModelResourceLocation(RedPower.MODID + ":stone_assembly", "inventory"));
			renderItem.getItemModelMesher().register(STONE_BUNDLE, 0, new ModelResourceLocation(RedPower.MODID + ":stone_bundle", "inventory"));
			renderItem.getItemModelMesher().register(STONE_CATHODE, 0, new ModelResourceLocation(RedPower.MODID + ":stone_cathode", "inventory"));
			renderItem.getItemModelMesher().register(STONE_POINTER, 0, new ModelResourceLocation(RedPower.MODID + ":stone_pointer", "inventory"));
			renderItem.getItemModelMesher().register(STONE_REDWIRE, 0, new ModelResourceLocation(RedPower.MODID + ":stone_redwire", "inventory"));
			renderItem.getItemModelMesher().register(STONE_SICKLE, 0, new ModelResourceLocation(RedPower.MODID + ":stone_sickle", "inventory"));
			renderItem.getItemModelMesher().register(STONE_WAFER, 0, new ModelResourceLocation(RedPower.MODID + ":stone_wafer", "inventory"));
			renderItem.getItemModelMesher().register(STONE_WIRE, 0, new ModelResourceLocation(RedPower.MODID + ":stone_wire", "inventory"));
			renderItem.getItemModelMesher().register(TAINTED_SILICON_CHIP, 0, new ModelResourceLocation(RedPower.MODID + ":tainted_silicon_chip", "inventory"));
			renderItem.getItemModelMesher().register(TIN_INGOT, 0, new ModelResourceLocation(RedPower.MODID + ":tin_ingot", "inventory"));
			renderItem.getItemModelMesher().register(TIN_NUGGET, 0, new ModelResourceLocation(RedPower.MODID + ":tin_nugget", "inventory"));
			renderItem.getItemModelMesher().register(TIN_PLATE, 0, new ModelResourceLocation(RedPower.MODID + ":tin_plate", "inventory"));
			renderItem.getItemModelMesher().register(VOLTMETER, 0, new ModelResourceLocation(RedPower.MODID + ":voltmeter", "inventory"));
			renderItem.getItemModelMesher().register(WOODEN_SICKLE, 0, new ModelResourceLocation(RedPower.MODID + ":wood_sickle", "inventory"));
			renderItem.getItemModelMesher().register(WOODEN_SAIL, 0, new ModelResourceLocation(RedPower.MODID + ":wooden_sail", "inventory"));
			renderItem.getItemModelMesher().register(WOODEN_WIND_TURBINE, 0, new ModelResourceLocation(RedPower.MODID + ":wooden_wind_turbine", "inventory"));
			renderItem.getItemModelMesher().register(WOODEN_WINDMILL, 0, new ModelResourceLocation(RedPower.MODID + ":wooden_windmill", "inventory"));
			renderItem.getItemModelMesher().register(WOOL_CARD, 0, new ModelResourceLocation(RedPower.MODID + ":wool_card", "inventory"));
		}
	}
}